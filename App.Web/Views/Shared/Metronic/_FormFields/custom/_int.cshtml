@using App.Web.Utilities.Settings
@inherits FormFieldRazorPage<int?, IntFieldSetting>
@{
    var random = Randomer.Self;
    var stg = FormFieldSetting;
    var inputId = $"field-input-{random.Next()}";
    var valMsg = string.IsNullOrEmpty(stg.InputName) ? null : Html.ValidationMessage(stg.InputName);
    var hasError = valMsg != null && valMsg.ToString().StripHtmlTags().Trim().Length > 0;
}
<div class="form-group  m-form__group  @(hasError ? "has-danger" : "") @stg.CssClass" id="@stg.HtmlId">
    @if (!string.IsNullOrWhiteSpace(stg.Label)) {
        if (stg.Label.Contains("</label>")) {

            @Html.Raw(stg.Label)
        } else {
            <label for="@inputId">
                @Html.Raw(stg.Label)
            </label>

        }
    }
    <div class="input-group">
        @stg.LeftAddon
        <input type="number" id="@inputId" class="form-control m-input" step="1" @(stg.Disabled ? "readonly" : "")
               placeholder="@stg.Placeholder"
               @(stg.Changed ? "data-changed='changed'" : "")
               name="@stg.InputName" value="@Model" />
        @if (hasError) {
            <div class="form-control-feedback">
                @valMsg
            </div>
        }
        @stg.RightAddon

    </div>


    @if (!string.IsNullOrEmpty(stg.HelpText)) {
        <span class="m-form__help">
            @Html.Raw(stg.HelpText)
        </span>
    }
</div>

@using (Html.Section("scripts")) {

    if (!string.IsNullOrEmpty(stg.ReferenceFrom)) {
        <script>
            $(document).on('change', '@stg.ReferenceFrom', function () {
                var value = $(this).val();

                if ($('#@inputId').data('changed') !== 'changed') {
                    $('#@inputId').val(value).trigger('change');
                }
            })

        </script>
    }


    if (stg.ChangedWatch) {
        <script>

                $(document).on('keyup', '#@inputId', function () {
                    
                    $(this).attr('data-changed', 'changed');
                });

        </script>
    }
}